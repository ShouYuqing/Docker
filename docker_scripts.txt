############useful docker scripts#############

docker build -t friendlyhello .  # Create image using this directory's Dockerfile
docker run -p 4000:80 friendlyhello  # Run "friendlyhello" mapping port 4000 to 80
docker run -d -p 4000:80 friendlyhello         # Same thing, but in detached mode
docker container ls                                # List all running containers
docker container ls -a             # List all containers, even those not running
docker container stop <hash>           # Gracefully stop the specified container
docker container kill <hash>         # Force shutdown of the specified container
docker container rm <hash>        # Remove specified container from this machine
docker container rm $(docker container ls -a -q)         # Remove all containers
docker image ls -a                             # List all images on this machine
docker image rm <image id>            # Remove specified image from this machine
docker image rm $(docker image ls -a -q)   # Remove all images from this machine
docker login             # Log in this CLI session using your Docker credentials
docker tag <image> username/repository:tag  # Tag <image> for upload to registry
docker push username/repository:tag            # Upload tagged image to registry
docker run username/repository:tag                   # Run image from a registry





启动 docker服务
sudo service docker start

查看docker的信息
sudo docker info

列出images
sudo docker images

列出constainers
sudo docker ps -a

启动container from image
sudo docker run -i -t -p 10688:10688 -p 5888:6888 -p 10060:10060 -p 10061:10061 --name eas1 --privileged=true 7698f282e524

运行container
docker start d3ee4863852e

关闭container
docker stop d3ee4863852e

删除container
docker rm d3ee4863852e

删除image
sudo docker rmi fce289e99eb9

退出并保持运行容器
ctrl+q+p 

进入container
docker exec -it dc6a69ba5d05 /bin/bash

Dockerfile:
RUN:container启动时就运行指令


####key登陆:ssh -i /Users/yuqings/Downloads/js_demo_key.pem ubuntu@3.16.188.86####
ssh ubuntu@3.14.66.30
####密码登陆:ssh ubuntu@3.16.188.86####
####进入root:ssh root@3.16.188.86####
####密码:**********####




############useful git scripts#############

structure:

修改的文件-----缓冲区-----本地git仓库-----远程git仓库

###### add ######
添加文件进入缓存区
git add file

添加多个文件
git add ./*.py

添加目录下所有文件
git add -A

###### branch ######
转换branch
git checkout dev

显示branch
git branch -a

删除branch
git branch -d mybranch

###### commit ######
将缓冲区内容交到git仓库
commit并填写说明
git commit -m "add something"

自动将修改的文件加入缓冲区，再提交
git commit -a -m "add something"

###### diff ######
工作目录与缓冲区的差异
git diff

工作目录与库版本的差异
git diff HEAD

缓冲区与库版本的差异
git diff --cached

###### merge ######
将某个分支合并入当前分支
git merge branchname

###### pull ######
将某个远程分支合并到本地git仓库
git pull origin master

###### push ######
本地分支推送到远程分支
git push origin master

